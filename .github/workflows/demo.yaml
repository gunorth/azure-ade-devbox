name: Deploy demo env

on:
  workflow_dispatch:
    inputs:
      DEVCENTER_NAME:
        description: 'DevCenter Name'     
        required: true
        default: 'devcenterdemolgm'
      PROJECT_NAME:
        description: 'Project Name' 
        required: true
        default: 'DevProject'
      RESOURCE_GROUP:
        description: 'Resource Group' 
        required: true
        default: 'rg-demo-ade'
      LOCATION:
        description: 'Location' 
        required: true
        default: 'westeurope'
      KV_NAME:
        description: 'Keyvault name' 
        required: true
        default: 'kv-demoadelgm'
      PAT_TOKEN:
          description: 'PAT allowing to access your Github Repo' 
          required: false
jobs:
  Deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
          
      - name: AZ Login
        run: az login --service-principal -u ${{ vars.AZ_LOGIN }} -p ${{ secrets.AZ_PASSWORD }} --tenant ${{ vars.AZ_TENANT }}
        
      - name: Prerequisites
        run: |
          # install extension silently
          az config set extension.use_dynamic_install=yes_without_prompt

          # install extension
          az extension add --name devcenter --allow-preview true
      - name: Deploy
        run: |
          RED="\e[31m"
          GREEN="\e[32m"
          ORANGE="\e[95m"
          ENDCOLOR="\e[0m" 
         
          # create RG
          echo -e "${GREEN}Creating RG${ENDCOLOR}"
          az group create -n "${{ github.event.inputs.RESOURCE_GROUP }}" -l ${{ github.event.inputs.LOCATION }}
          echo $'\u2714 Success'

          # create keyvault & inject PAT as secret
          echo -e "${GREEN}Creating keyvault${ENDCOLOR}"
          az keyvault create -n "${{ github.event.inputs.KV_NAME }}" -l ${{ github.event.inputs.LOCATION }} -g "${{ github.event.inputs.RESOURCE_GROUP }}"
          export GHPAT="${{ github.event.inputs.PAT_TOKEN }}"
          if [ -z "$GHPAT" ]
          then
              echo -e "${GREEN}create secret using PAT given in secrets${ENDCOLOR}"
              az keyvault secret set --vault-name "${{ github.event.inputs.KV_NAME }}" --name GHPAT --value "${{ secrets.PAT_TOKEN }}"
          else
             echo -e "${GREEN}create secret using PAT given in input${ENDCOLOR}"
              az keyvault secret set --vault-name "${{ github.event.inputs.KV_NAME }}" --name GHPAT --value "${{ github.event.inputs.PAT_TOKEN }}"
          fi

          # create dev environnement
          echo "creating devCenter"
          echo -e "${GREEN}Creating dev center${ENDCOLOR}"
          az devcenter admin devcenter create --location "${{ github.event.inputs.LOCATION }}" --name "${{ github.event.inputs.DEVCENTER_NAME }}" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}" -o none

          # enable system identity on DevCenter
          echo -e "${GREEN}Enabling managed identity${ENDCOLOR}"
          az devcenter admin devcenter update -n "${{ github.event.inputs.DEVCENTER_NAME }}" --identity-type SystemAssigned --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}" -o none
          
          # retrieving DevCenter identity
          echo -e "${GREEN}Retrieving manages identity${ENDCOLOR}"
          OID=$(az ad sp list --display-name "${{ github.event.inputs.DEVCENTER_NAME }}" --query [].id -o tsv)
          echo -e "${ORANGE}$OID${ENDCOLOR}"
          sleep 30 # wait for replication
          echo -e "${GREEN}Creating KV policy${ENDCOLOR}"
          az keyvault set-policy -n "${{ github.event.inputs.KV_NAME }}" --secret-permissions get --object-id $OID

          # retrieve DevCenterId
          DEVCENTER_ID=$(az devcenter admin devcenter show --name "${{ github.event.inputs.DEVCENTER_NAME }}" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}" --query=id -o tsv)

          # Create environment types
          echo -e "${GREEN}Creating environments${ENDCOLOR}"
          az devcenter admin environment-type create --dev-center-name "${{ github.event.inputs.DEVCENTER_NAME }}" --name "PROD" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}"
          az devcenter admin environment-type create --dev-center-name "${{ github.event.inputs.DEVCENTER_NAME }}" --name "TEST" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}"
          az devcenter admin environment-type create --dev-center-name "${{ github.event.inputs.DEVCENTER_NAME }}" --name "DEV" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}"

          # create a project
          echo -e "${GREEN}Creating projects${ENDCOLOR}"
          az devcenter admin project create --location "${{ github.event.inputs.LOCATION }}" --description "This is my first project." --dev-center-id "$DEVCENTER_ID" --name "DevProject" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}" --max-dev-boxes-per-user "3"

          # create a DevBox
          echo -e "${GREEN}Creating dev box${ENDCOLOR}"
          az devcenter admin devbox-definition create --location "${{ github.event.inputs.LOCATION }}" --image-reference id="/subscriptions/${{ vars.SUBSCRIPTION_ID }}/resourceGroups/${{ github.event.inputs.RESOURCE_GROUP }}/providers/Microsoft.DevCenter/devcenters/${{ github.event.inputs.DEVCENTER_NAME }}/galleries/default/images/microsoftvisualstudio_visualstudioplustools_vs-2022-ent-general-win11-m365-gen2" --os-storage-type "ssd_256gb" --sku name="general_i_8c32gb256ssd_v2" --name "WebDevBox" --dev-center-name "${{ github.event.inputs.DEVCENTER_NAME }}" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}"
          az devcenter admin devbox-definition create --location "${{ github.event.inputs.LOCATION }}" --image-reference id="/subscriptions/${{ vars.SUBSCRIPTION_ID }}/resourceGroups/${{ github.event.inputs.RESOURCE_GROUP }}/providers/Microsoft.DevCenter/devcenters/${{ github.event.inputs.DEVCENTER_NAME }}/galleries/default/images/microsoftvisualstudio_visualstudioplustools_vs-2022-ent-general-win11-m365-gen2" --os-storage-type "ssd_256gb" --sku name="general_i_32c128gb512ssd_v2" --name "SuperPowerfulDevBox" --dev-center-name "${{ github.event.inputs.DEVCENTER_NAME }}" --resource-group "${{ github.event.inputs.RESOURCE_GROUP }}"

          # create a catalog
          echo -e "${GREEN}Creating catalog${ENDCOLOR}"
          SECRETID=$(az keyvault secret show --vault-name ${{ github.event.inputs.KV_NAME }} --name GHPAT --query id -o tsv)
          echo -e "${ORANGE}$SECRETID${ENDCOLOR}"
          REPO_URL="https://github.com/lgmorand/azure-ade-devbox.git"
          az devcenter admin catalog create --git-hub path="/Environments" branch="main" secret-identifier=$SECRETID uri=$REPO_URL -n "EnvCatalog" -d "${{ github.event.inputs.DEVCENTER_NAME }}" -g ${{ github.event.inputs.RESOURCE_GROUP }}
          REPO_URL="https://github.com/microsoft/devcenter-catalog.git"
          az devcenter admin catalog create --git-hub path="/Tasks" branch="main" secret-identifier=$SECRETID uri=$REPO_URL -n "QuickStart" -d "${{ github.event.inputs.DEVCENTER_NAME }}" -g ${{ github.event.inputs.RESOURCE_GROUP }}
